name: PR Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install bandit

      - name: Run Bandit
        id: bandit
        run: |
          if bandit -r . -lll -o results.txt; then
            echo "CRITICAL_ISSUE_FOUND=false" >> $GITHUB_ENV
          else
            echo "CRITICAL_ISSUE_FOUND=true" >> $GITHUB_ENV
          fi

      - name: Print Bandit results
        run: cat results.txt

      - name: Comment on PR based on scan result
        uses: actions/github-script@v5
        with:
          script: |
            const issue_number = context.issue.number || context.payload.pull_request?.number;
            if (!issue_number) {
              console.log('No issue or pull request number found. Skipping comment posting.');
              return
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: process.env.CRITICAL_ISSUE_FOUND === 'true' ? 
                    'Block - Critical vulnerabilities found.' : 
                    'Successful - No critical vulnerabilities found.'
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CRITICAL_ISSUE_FOUND: ${{ steps.bandit.outputs.CRITICAL_ISSUE_FOUND }}

      - name: Auto-merge PR if no vulnerabilities found
        if: env.CRITICAL_ISSUE_FOUND == 'false'
        uses: pascalgn/automerge-action@v0.14.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          merge-method: merge
          comment: "Auto-merging PR as no critical vulnerabilities were identified."

  sbom:
    needs: scan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM
        run: syft . -o cyclonedx-json=sbom.json

      - name: Upload SBOM as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: SBOM
          path: sbom.json
