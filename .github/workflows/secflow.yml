name: Security Scan and Merge

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  security_scan:
    name: Run Bandit Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit Security Scan
        run: bandit -r . -lll --exit-zero
        id: bandit_scan

      - name: Check for Critical Vulnerabilities
        id: check_vulns
        run: |
          CRITICAL=$(bandit -r . -lll -f json | jq '.metrics._totals.CRITICAL')
          echo "Critical vulnerabilities found: $CRITICAL"
          echo "::set-output name=found::$CRITICAL"

      - name: Block PR if Critical Vulnerabilities Found
        if: steps.check_vulns.outputs.found > 0
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Block: Critical vulnerabilities found.'
            })
            throw new Error('Blocking merge due to critical vulnerabilities.');

  auto_merge:
    needs: security_scan
    if: github.event_name == 'pull_request' && needs.security_scan.outputs.found == '0'
    runs-on: ubuntu-latest
    steps:
      - name: Auto-merge PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Successful: No critical vulnerabilities found.'
            })

  sbom_and_dependency_scan:
    needs: [security_scan, auto_merge]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Generate SBOM
        run: |
          pip install syft
          syft packages dir:/path/to/project -o cyclonedx-json > sbom.json

      - name: Perform Dependency Scanning
        run: |
          # Use a dependency scanning tool or service here
          echo "Dependency scanning logic goes here"
