name: PR Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install bandit

      - name: Run Bandit
        id: bandit
        run: |
          bandit -r . -lll -o results.txt || echo "::set-output name=CRITICAL_ISSUE_FOUND::true"

      - name: Block PR if vulnerabilities found
        if: steps.bandit.outputs.CRITICAL_ISSUE_FOUND == 'true'
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'Successful - No critical vulnerabilities found.'
            })
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Auto-merge PR if no vulnerabilities found
        if: steps.bandit.outputs.CRITICAL_ISSUE_FOUND != 'true'
        uses: pascalgn/automerge-action@v0.14.3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          merge-method: merge
          comment: "Successful"

  sbom:
    needs: scan
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cyclonedx-bom

      - name: Generate SBOM
        run: cyclonedx-py -i requirements.txt -o bom.xml

      - name: Archive SBOM
        uses: actions/upload-artifact@v2
        with:
          name: SBOM
          path: bom.xml
